---
title: "prac8"
format: html
editor: visual
---


```{r}
#library a bunch of packages we may (or may not) use - install them first if not installed already. 
library(tidyverse)
library(tmap)
library(plotly)
library(broom)
library(mapview)
library(sf)
library(sp)
library(spdep)
library(car)
library(fs)
library(janitor)
```

# 数据准备
## 读取数据
```{r}
#download a zip file containing some boundaries we want to use

download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", 
              destfile="statistical-gis-boundaries-london.zip")
```

```{r}
library(fs)
listfiles <- dir_info(".") %>%  # 使用当前目录 "."
  dplyr::filter(str_detect(path, ".zip")) %>%
  dplyr::select(path) %>%
  pull() %>%
  # print out the .gz file
  print() %>%
  as.character() %>%
  utils::unzip(exdir = ".")  # 解压到当前目录

```

```{r}
#look what is inside the zip

Londonwards<-fs::dir_info("./statistical-gis-boundaries-london/ESRI")%>%
  #$ means exact match
  dplyr::filter(str_detect(path, 
                           "London_Ward_CityMerged.shp$"))%>%
  dplyr::select(path)%>%
  dplyr::pull()%>%
  #read in the file in
  sf::st_read()

```
### 快速绘图查看
```{r}
#check the data
qtm(Londonwards)

```

```{r}
LondonWardProfiles <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv", 
                               na = c("", "NA", "n/a"), 
                               locale = locale(encoding = 'Latin1'), 
                               col_names = TRUE)
```
### 查看列名和数据类型
```{r}
#check all of the columns have been read in correctly
Datatypelist <- LondonWardProfiles %>% 
  summarise_all(class) %>%
  pivot_longer(everything(), 
               names_to="All_variables", 
               values_to="Variable_class")

Datatypelist
```
## 合并数据
```{r}
#merge boundaries and data
LonWardProfiles <- Londonwards%>%
  left_join(.,
            LondonWardProfiles, 
            by = c("GSS_CODE" = "New code"))

#let's map our dependent variable to see if the join has worked:
tmap_mode("plot")
qtm(LonWardProfiles, 
    fill = "Average GCSE capped point scores - 2014", 
    borders = NULL,  
    fill.palette = "Blues")
```

```{r}
#might be a good idea to see where the secondary schools are in London too
london_schools <- read_csv("https://data.london.gov.uk/download/london-schools-atlas/57046151-39a0-45d9-8dc0-27ea7fd02de8/all_schools_xy_2016.csv")

#from the coordinate values stored in the x and y columns, which look like they are latitude and longitude values, create a new points dataset
lon_schools_sf <- st_as_sf(london_schools, 
                           coords = c("x","y"), 
                           crs = 4326)

lond_sec_schools_sf <- lon_schools_sf %>%
  filter(PHASE=="Secondary")

tmap_mode("plot")
qtm(lond_sec_schools_sf)
```
# 检验研究假设
explore the factors that might influence GCSE exam performance
## Regression基础
```{r}
# 输入横纵轴变量，生成散点图
q <- qplot(x = `Unauthorised Absence in All Schools (%) - 2013`, 
           y = `Average GCSE capped point scores - 2014`, 
           data=LonWardProfiles)
```

```{r}
#plot with a regression line - note, I've added some jitter here as the x-scale is rounded
# 在散点图上添加回归线和抖动
q + stat_smooth(method="lm", se=FALSE, size=1) + 
  geom_jitter()
```
## 运行回归模型(方法1)
```{r}
# 清理数据并选择自变量和因变量
Regressiondata<- LonWardProfiles%>%
  clean_names()%>%
  dplyr::select(average_gcse_capped_point_scores_2014, 
                unauthorised_absence_in_all_schools_percent_2013)

# 运行线性回归模型
# lm()是执行线性回归分析的函数，lm(因变量 ~ 自变量, data = 数据框)
model1 <- Regressiondata %>%
  lm(average_gcse_capped_point_scores_2014 ~
               unauthorised_absence_in_all_schools_percent_2013,
     data=.)
```

```{r}
# 查看结果
summary(model1)
```
### 整理输出
```{r}
library(broom)
tidy(model1)
```

```{r}
glance(model1)
```

```{r}
# 对数据框中的每一行进行预测
library(tidypredict)
Regressiondata %>%
  tidypredict_to_column(model1)
```
## 用tidymodels运行回归模型(方法2)
```{r}
library(tidymodels)

# set the model
lm_mod <- linear_reg()

# fit the model
lm_fit <- 
  lm_mod %>% 
  fit(average_gcse_capped_point_scores_2014 ~
               unauthorised_absence_in_all_schools_percent_2013,
     data=Regressiondata)

# we cover tidy and glance in a minute...
tidy(lm_fit)
```

```{r}
glance(lm_fit)
```
## Linear Regression的基本假设
### 假设 1 - 因变量和自变量之间存在线性关系
除绘制散点图外，检查是否可能是线性关系的另一种方法是查看变量的频率分布。
如果是正态分布，那么如果两个变量以某种方式相关，那么很有可能是线性关系。
```{r}
# 检查因变量的分布情况
# 绘制密度直方图和密度曲线
ggplot(LonWardProfiles, aes(x=`Average GCSE capped point scores - 2014`)) + 
  geom_histogram(aes(y = ..density..),
                 binwidth = 5) + 
  geom_density(colour="red", 
               size=1, 
               adjust=1)
# 正态分布
```

```{r}
# 检查自变量的分布情况
ggplot(LonWardProfiles, aes(x=`Unauthorised Absence in All Schools (%) - 2013`)) +
  geom_histogram(aes(y = ..density..),
                 binwidth = 0.1) + 
  geom_density(colour="red",
               size=1, 
               adjust=1)
# 正态分布
```

```{r}
# 检查房价变量的分布情况
library(ggplot2)

# from 21/10 there is an error on the website with 
# median_house_price_2014 being called median_house_price<c2>2014
# this was corrected around 23/11 but can be corrected with rename..

LonWardProfiles <- LonWardProfiles %>%
  #try removing this line to see if it works...
  dplyr::rename(median_house_price_2014 =`Median House Price (£) - 2014`)%>%
  janitor::clean_names()

ggplot(LonWardProfiles, aes(x=median_house_price_2014)) + 
  geom_histogram()
# 正向偏斜分布
```

```{r}
# 将原始房价变量与 GCSE 分数绘制在一起
qplot(x = median_house_price_2014, 
      y = average_gcse_capped_point_scores_2014, 
      data=LonWardProfiles)
# 没有线性关系，可能是曲线关系
```
转换非正态分布的变量，使其更符合正态分布，实现两个变量之间线性关系
```{r}
# 取房价的对数
ggplot(LonWardProfiles, aes(x=log(median_house_price_2014))) + 
  geom_histogram()
# 仍然有点偏斜
```
通过symbox()函数探索房价变量的分布特征，尝试不同的幂变换，找到最合适的变换使变量分布更加接近正态分布
```{r}
symbox(~median_house_price_2014, 
       LonWardProfiles, 
       na.rm=T,
       powers=seq(-3,3,by=.5))
# 将房价变量提升至 -1 次方应该会导致更正态的分布
```

```{r}
ggplot(LonWardProfiles, aes(x=(median_house_price_2014)^-1)) + 
  geom_histogram()
```

```{r}
# 再次绘制散点图
qplot(x = (median_house_price_2014)^-1, 
      y = average_gcse_capped_point_scores_2014,
      data=LonWardProfiles)
```
### 假设 2 - 模型中的残差应呈正态分布
```{r}
#save the residuals into your dataframe
model_data <- model1 %>%
  augment(., Regressiondata)

#plot residuals
model_data%>%
dplyr::select(.resid)%>%
  pull()%>%
  qplot()+ 
  geom_histogram() 
```
### 假设 3 - 独立变量不存在多重共线性
```{r}
# 添加房价作为自变量，扩展为多元回归模型
Regressiondata2<- LonWardProfiles%>%
  clean_names()%>%
  dplyr::select(average_gcse_capped_point_scores_2014,
         unauthorised_absence_in_all_schools_percent_2013,
         median_house_price_2014)

# 线性拟合GCSE Scores ∼ Absence Rate+log(House Price)
model2 <- lm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), data = Regressiondata2)

# 提取回归模型的主要结果，以表格格式展示
tidy(model2)
```

```{r}
glance(model2)
```

```{r}
# 将回归模型的残差保存到数据中，方便后续分析
model_data2 <- model2 %>%
  augment(., Regressiondata2)

# 将残差加入到地理空间数据
LonWardProfiles <- LonWardProfiles %>%
  mutate(model2resids = residuals(model2))
```

#### 检查变量之间的多重共线性
```{r}
library(corrr)

Correlation <- LonWardProfiles %>%
  st_drop_geometry()%>%   # 移除空间几何信息，保留属性表数据
  dplyr::select(average_gcse_capped_point_scores_2014,
         unauthorised_absence_in_all_schools_percent_2013,
         median_house_price_2014) %>%    # 选择相关变量
  mutate(median_house_price_2014 =log(median_house_price_2014))%>%   # 对房价取对数
    correlate() %>%   # 计算相关性矩阵
  # 从相关性矩阵中排除因变量，只关注自变量之间的相关性
  focus(-average_gcse_capped_point_scores_2014, mirror = TRUE) 


# 可视化相关性矩阵
rplot(Correlation)
# 正相关：点为蓝色，大小表示强度。
# 负相关：点为红色，大小表示强度。
# 无相关：点较小或不存在。
```
#### 方差膨胀因子（VIF）
任何变量的 VIF 值超过10，可能需要担心，甚至可能从分析中删除该变量
```{r}
vif(model2)
```

```{r}
# 选择 LonWardProfiles 数据集中第10列到第74列,计算相关性矩阵
position <- c(10:74)

Correlation_all<- LonWardProfiles %>%
  st_drop_geometry()%>%
  dplyr::select(position)%>%
    correlate()
```

```{r}
# 绘制相关性矩阵
rplot(Correlation_all)
```
### 假设 4 - 同方差性
```{r}
#print some model diagnositcs. 
par(mfrow=c(2,2))    # 图形布局为 2 行 2 列
plot(model2)   # 默认生成的 4 个诊断图
# 1. 残差-拟合值图（Residuals vs Fitted）
# 2. 正态 Q-Q 图（Normal Q-Q）
# 3. 标准化残差的尺度位置图（Scale-Location 或 Spread-Location）
# 4. 残差杠杆值图（Residuals vs Leverage）
```

```{r}
# 使用check_model()生成诊断图
library(performance)
check_model(model2, check="all")
```
### 假设 5 - 误差独立性
#### 标准自相关（Durbin-Watson 检验）
```{r}
#run durbin-watson test
DW <- durbinWatsonTest(model2)
tidy(DW)
```
#### 空间自相关
```{r}
# 绘制残差图，查看是否有明显的趋势
tmap_mode("view")
#qtm(LonWardProfiles, fill = "model1_resids")

tm_shape(LonWardProfiles) +
  tm_polygons("model2resids",
              palette = "RdYlBu") +
tm_shape(lond_sec_schools_sf) + tm_dots(col = "TYPE")
# 有些蓝色区域与其他蓝色区域相邻，有些红色/橙色区域与其他红色/橙色区域相邻，模型可能存在一些空间自相关性
```
利用Moran's I来检查空间自相关性
```{r}
#calculate the centroids of all Wards in London
coordsW <- LonWardProfiles%>%
  st_centroid()%>%
  st_geometry()

plot(coordsW)
```

```{r}
# 为空间数据生成邻接结构
# 第一种：基于多边形的 Queen 邻接

LWard_nb <- LonWardProfiles %>%
  poly2nb(., queen=T)

# 第二种：基于坐标的 K 近邻
knn_wards <-coordsW %>%
  knearneigh(., k=4)

LWard_knn <- knn_wards %>%
  knn2nb()

# 绘制Queen 邻接网络
plot(LWard_nb, st_geometry(coordsW), col="red")
```

```{r}
# 绘制K 近邻网络
plot(LWard_knn, st_geometry(coordsW), col="blue")
```

```{r}
# 创建空间权重矩阵
# queen
Lward.queens_weight <- LWard_nb %>%
  nb2listw(., style="W")

# k
Lward.knn_4_weight <- LWard_knn %>%
  nb2listw(., style="W")
```

```{r}
# 使用queen对残差进行 Moran I 检验
Queen <- LonWardProfiles %>%
  st_drop_geometry()%>%
  dplyr::select(model2resids)%>%
  pull()%>%
  moran.test(., Lward.queens_weight)%>%
  tidy()
Queen
```

```{r}
# 使用k近邻对残差进行 Moran I 检验
Nearest_neighbour <- LonWardProfiles %>%
  st_drop_geometry()%>%
  dplyr::select(model2resids)%>%
  pull()%>%
  moran.test(., Lward.knn_4_weight)%>%
  tidy()
Nearest_neighbour
```
estimate1：Moran's I 指数
正值：变量存在正的空间自相关（相邻单元值相似）
负值：变量存在负的空间自相关（相邻单元值相反）
接近 0：没有显著的空间自相关

estimate2：Moran's I 在随机分布下的理论期望值

estimate3：Moran's I 的分布方差，用于计算统计显著性

statistic：Z 值，检验 Moran's I 是否显著高于（或低于）随机分布下的期望值

# 空间回归模型
## 处理空间自相关残差
### 空间滞后（滞后因变量）模型
```{r}
#Original Model
model2 <- lm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), data = LonWardProfiles)

tidy(model2)
```

```{r}
# 使用 Queen's case 空间权重矩阵运行空间滞后模型
library(spatialreg)

slag_dv_model2_queen <- lagsarlm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), 
               data = LonWardProfiles, 
               nb2listw(LWard_nb, style="C"),   # 将邻接列表转换为空间权重列表对象
               method = "eigen")

#what do the outputs show?
tidy(slag_dv_model2_queen)
```

```{r}
#glance() gives model stats but this need something produced from a linear model
#here we have used lagsarlm()
glance(slag_dv_model2_queen)
```

```{r}
t<-summary(slag_dv_model2_queen)

sum(t$residuals)   # 提取模型的残差
```

```{r}
# 似然比检验（Likelihood Ratio Test）
library(lmtest)
lrtest(slag_dv_model2_queen, model2)
# Model 1（空间滞后回归模型）与 Model 2（普通线性回归模型）的拟合差异不显著（p = 0.4968）
# 由于模型类型不同（Sarlm vs lm），比较结果可能不完全可靠
```

```{r}
# 通过 impacts 函数计算空间滞后回归模型的直接、间接和总影响
weight_list<-nb2listw(LWard_knn, style="C")  # 创建空间权重列表

imp <- impacts(slag_dv_model2_queen, listw=weight_list)   # 计算 SAR 模型的影响，包括直接、间接和总影响

imp
```
Direct（直接效应）：变量自身的变化对因变量的直接影响
Indirect（间接效应）：通过空间滞后项传播到邻近区域的间接影响
Total（总效应）：直接效应与间接效应的叠加

```{r}
# 应对更大的矩阵计算直接、间接和总影响
slag_dv_model2_queen_row <- lagsarlm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), 
               data = LonWardProfiles, 
               nb2listw(LWard_nb, style="W"), 
               method = "eigen")


W <- as(weight_list, "CsparseMatrix")

# 使用不同的迹矩阵方法
trMatc <- trW(W, type="mult")
trMC <- trW(W, type="MC")

imp2 <- impacts(slag_dv_model2_queen_row, tr=trMatc, R=200)

imp3 <- impacts(slag_dv_model2_queen_row, tr=trMC, R=200)

imp2
```

```{r}
imp3
```

```{r}
sum <- summary(imp2,  zstats=TRUE, short=TRUE)

sum
```

```{r}
# 使用 k 最近邻 (k=4) 运行空间滞后模型
#run a spatially-lagged regression model
slag_dv_model2_knn4 <- lagsarlm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), 
               data = LonWardProfiles, 
               nb2listw(LWard_knn,    # 使用 k 最近邻 (k=4) 构建的邻接矩阵
                        style="C"), 
               method = "eigen")

#what do the outputs show?
tidy(slag_dv_model2_knn4)
```
空间滞后效应（rho = 0.374，显著）
所有变量的 P 值均显著（P 值接近 0），表明模型和变量的影响均有统计意义
```{r}
# 检验空间滞后回归模型的残差是否还存在空间自相关

LonWardProfiles <- LonWardProfiles %>%
  mutate(slag_dv_model2_knn_resids = residuals(slag_dv_model2_knn4))

KNN4Moran <- LonWardProfiles %>%
  st_drop_geometry()%>%
  dplyr::select(slag_dv_model2_knn_resids)%>%
  pull()%>%
  moran.test(., Lward.knn_4_weight)%>%
  tidy()

KNN4Moran
```
### 空间误差模型
```{r}
sem_model1 <- errorsarlm(average_gcse_capped_point_scores_2014 ~ unauthorised_absence_in_all_schools_percent_2013 + 
               log(median_house_price_2014), 
               data = LonWardProfiles,
               nb2listw(LWard_knn, style="C"), 
               method = "eigen")

tidy(sem_model1)
# lambda (空间误差系数)：λ=0.4749 表明误差项存在适中的正向空间自相关
```
滞后模型考虑了某个区域的因变量值可能与邻近区域中该变量的值相关或受其影响的情况
误差模型并不假设相邻的独立变量会影响因变量，而是假设模型的规范或所用的数据存在问题，没有空间过程，只是一个未解释但有影响力的变量的聚类
知道导致因变量中空间自相关的原因时，可能运行滞后模型
当不确定可能缺少什么时，可能会运行误差模型

更科学的方法 - 拉格朗日乘数检验:识别是否需要使用空间误差模型 (SEM) 或空间滞后模型 (SAR)
### 拉格朗日乘数检验(LM检验)
```{r}
library(spdep)

Lward.queens_weight_ROW <- LWard_nb %>%
  nb2listw(., style="W")

lm.LMtests(model2, Lward.queens_weight_ROW, test = c("LMerr","LMlag","RLMerr","RLMlag","SARMA"))
# LMerr	测试是否需要使用 空间误差模型 (SEM)
# LMlag	测试是否需要使用 空间滞后模型 (SAR)
```
检验LMerr或LMlag是否显著,如果其中一个比另一个显著得多，选择其中最显著的模型
SARMA 同时考虑了空间误差和空间滞后效应，显著性表明数据中可能同时存在两种空间效应

空间回归分析的一般步骤：
1、首先运行普通最小二乘回归 (OLS)
2、检查残差的空间自相关性（Moran's I）
3、需要根据具体情况选择适合的模型：
·它是一个全局模型（空间误差模型/空间滞后模型）还是局部模型（归GWR）？
·单一模型（误差/滞后）可以适用于研究区域吗？——研究区域内的空间依赖性是否具有一致性
·空间自相关是否存在问题（误差）或显示局部趋势（GWR）？
  ——空间自相关的意义是什么？
    如果它是模型误差的一部分，需修正（如 误差SEM）
    如果它是研究现象的一部分，需解释（如 GWR）

## 地理加权回归 (GWR)
```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```