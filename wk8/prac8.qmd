---
title: "prac8"
format: html
editor: visual
---


```{r}
#library a bunch of packages we may (or may not) use - install them first if not installed already. 
library(tidyverse)
library(tmap)
library(plotly)
library(broom)
library(mapview)
library(sf)
library(sp)
library(spdep)
library(car)
library(fs)
library(janitor)
```

# 读取数据
```{r}
#download a zip file containing some boundaries we want to use

download.file("https://data.london.gov.uk/download/statistical-gis-boundary-files-london/9ba8c833-6370-4b11-abdc-314aa020d5e0/statistical-gis-boundaries-london.zip", 
              destfile="statistical-gis-boundaries-london.zip")
```

```{r}
library(fs)
listfiles <- dir_info(".") %>%  # 使用当前目录 "."
  dplyr::filter(str_detect(path, ".zip")) %>%
  dplyr::select(path) %>%
  pull() %>%
  # print out the .gz file
  print() %>%
  as.character() %>%
  utils::unzip(exdir = ".")  # 解压到当前目录

```

```{r}
#look what is inside the zip

Londonwards<-fs::dir_info("./statistical-gis-boundaries-london/ESRI")%>%
  #$ means exact match
  dplyr::filter(str_detect(path, 
                           "London_Ward_CityMerged.shp$"))%>%
  dplyr::select(path)%>%
  dplyr::pull()%>%
  #read in the file in
  sf::st_read()

```
## 快速绘图查看
```{r}
#check the data
qtm(Londonwards)

```

```{r}
LondonWardProfiles <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv", 
                               na = c("", "NA", "n/a"), 
                               locale = locale(encoding = 'Latin1'), 
                               col_names = TRUE)
```
## 查看列名和数据类型
```{r}
#check all of the columns have been read in correctly
Datatypelist <- LondonWardProfiles %>% 
  summarise_all(class) %>%
  pivot_longer(everything(), 
               names_to="All_variables", 
               values_to="Variable_class")

Datatypelist
```
## 合并数据
```{r}
#merge boundaries and data
LonWardProfiles <- Londonwards%>%
  left_join(.,
            LondonWardProfiles, 
            by = c("GSS_CODE" = "New code"))

#let's map our dependent variable to see if the join has worked:
tmap_mode("plot")
qtm(LonWardProfiles, 
    fill = "Average GCSE capped point scores - 2014", 
    borders = NULL,  
    fill.palette = "Blues")
```

```{r}
#might be a good idea to see where the secondary schools are in London too
london_schools <- read_csv("https://data.london.gov.uk/download/london-schools-atlas/57046151-39a0-45d9-8dc0-27ea7fd02de8/all_schools_xy_2016.csv")

#from the coordinate values stored in the x and y columns, which look like they are latitude and longitude values, create a new points dataset
lon_schools_sf <- st_as_sf(london_schools, 
                           coords = c("x","y"), 
                           crs = 4326)

lond_sec_schools_sf <- lon_schools_sf %>%
  filter(PHASE=="Secondary")

tmap_mode("plot")
qtm(lond_sec_schools_sf)
```
# explore the factors that might influence GCSE exam performance
## Regression Basics
```{r}
# 输入横纵轴变量，生成散点图
q <- qplot(x = `Unauthorised Absence in All Schools (%) - 2013`, 
           y = `Average GCSE capped point scores - 2014`, 
           data=LonWardProfiles)
```

```{r}
#plot with a regression line - note, I've added some jitter here as the x-scale is rounded
# 在散点图上添加回归线和抖动
q + stat_smooth(method="lm", se=FALSE, size=1) + 
  geom_jitter()
```
## Running a Regression Model(regression方法1)
```{r}
# 清理数据并选择自变量和因变量
Regressiondata<- LonWardProfiles%>%
  clean_names()%>%
  dplyr::select(average_gcse_capped_point_scores_2014, 
                unauthorised_absence_in_all_schools_percent_2013)

# 运行线性回归模型
# lm()是执行线性回归分析的函数，lm(因变量 ~ 自变量, data = 数据框)
model1 <- Regressiondata %>%
  lm(average_gcse_capped_point_scores_2014 ~
               unauthorised_absence_in_all_schools_percent_2013,
     data=.)
```

```{r}
# 查看结果
summary(model1)
```
### tidy our output
```{r}
library(broom)
tidy(model1)
```

```{r}
glance(model1)
```

```{r}
# 对数据框中的每一行进行预测
library(tidypredict)
Regressiondata %>%
  tidypredict_to_column(model1)
```
## tidymodels(regression方法2)
```{r}
library(tidymodels)

# set the model
lm_mod <- linear_reg()

# fit the model
lm_fit <- 
  lm_mod %>% 
  fit(average_gcse_capped_point_scores_2014 ~
               unauthorised_absence_in_all_schools_percent_2013,
     data=Regressiondata)

# we cover tidy and glance in a minute...
tidy(lm_fit)
```

```{r}
glance(lm_fit)
```
## Linear Regression的基本假设
### 假设 1 - 因变量和自变量之间存在线性关系
除绘制散点图外，检查是否可能是线性关系的另一种方法是查看变量的频率分布。
如果是正态分布，那么如果两个变量以某种方式相关，那么很有可能是线性关系。
```{r}
# 检查因变量的分布情况
# 绘制密度直方图和密度曲线
ggplot(LonWardProfiles, aes(x=`Average GCSE capped point scores - 2014`)) + 
  geom_histogram(aes(y = ..density..),
                 binwidth = 5) + 
  geom_density(colour="red", 
               size=1, 
               adjust=1)
# 正态分布
```

```{r}
# 检查自变量的分布情况
ggplot(LonWardProfiles, aes(x=`Unauthorised Absence in All Schools (%) - 2013`)) +
  geom_histogram(aes(y = ..density..),
                 binwidth = 0.1) + 
  geom_density(colour="red",
               size=1, 
               adjust=1)
# 正态分布
```

```{r}
# 检查房价变量的分布情况
library(ggplot2)

# from 21/10 there is an error on the website with 
# median_house_price_2014 being called median_house_price<c2>2014
# this was corrected around 23/11 but can be corrected with rename..

LonWardProfiles <- LonWardProfiles %>%
  #try removing this line to see if it works...
  dplyr::rename(median_house_price_2014 =`Median House Price (£) - 2014`)%>%
  janitor::clean_names()

ggplot(LonWardProfiles, aes(x=median_house_price_2014)) + 
  geom_histogram()
# 正向偏斜分布
```

```{r}
# 将原始房价变量与 GCSE 分数绘制在一起
qplot(x = median_house_price_2014, 
      y = average_gcse_capped_point_scores_2014, 
      data=LonWardProfiles)
# 没有线性关系，可能是曲线关系
```
转换非正态分布的变量，使其更符合正态分布，实现两个变量之间线性关系
```{r}
# 取房价的对数
ggplot(LonWardProfiles, aes(x=log(median_house_price_2014))) + 
  geom_histogram()
# 仍然有点偏斜
```
通过symbox()函数探索房价变量的分布特征，尝试不同的幂变换，找到最合适的变换使变量分布更加接近正态分布
```{r}
symbox(~median_house_price_2014, 
       LonWardProfiles, 
       na.rm=T,
       powers=seq(-3,3,by=.5))
# 将房价变量提升至 -1 次方应该会导致更正态的分布
```

```{r}
ggplot(LonWardProfiles, aes(x=(median_house_price_2014)^-1)) + 
  geom_histogram()
```

```{r}
# 再次绘制散点图
qplot(x = (median_house_price_2014)^-1, 
      y = average_gcse_capped_point_scores_2014,
      data=LonWardProfiles)
```
### 假设 2 - 模型中的残差应呈正态分布
```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```